/*
 * OpsGenie REST API
 * OpsGenie API Description
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ifountain.opsgenie.client.swagger.api;

import com.ifountain.opsgenie.client.swagger.ApiException;
import com.ifountain.opsgenie.client.swagger.model.*;
import org.junit.Ignore;
import org.junit.Test;

/**
 * API tests for AlertApi
 */
@Ignore
public class AlertApiTest {

    private final AlertApi api = new AlertApi();


    /**
     * Acknowledge Alert
     *
     * Acknowledges alert with given identifier
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void acknowledgeAlertTest() throws ApiException {


        String identifier = null;

        String identifierType = null;

        AcknowledgeAlertRequest body = null;
        

        SuccessResponse response = api.acknowledgeAlert(identifier, identifierType, body);

        // TODO: test validations
    }

    /**
     * Add Alert Details
     *
     * Add details to the alert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addDetailsTest() throws ApiException {


        String identifier = null;

        AddAlertDetailsRequest body = null;

        String identifierType = null;
        

        SuccessResponse response = api.addDetails(identifier, body, identifierType);

        // TODO: test validations
    }

    /**
     * Add Alert Note
     *
     * Adds note to alert with given identifier
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addNoteTest() throws ApiException {


        String identifier = null;

        AddAlertNoteRequest body = null;

        String identifierType = null;
        

        SuccessResponse response = api.addNote(identifier, body, identifierType);

        // TODO: test validations
    }

    /**
     * Add Saved Search
     *
     * Create saved search with given fields
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addSavedSearchesTest() throws ApiException {


        AddSavedSearchRequest body = null;
        

        AddSavedSearchResponse response = api.addSavedSearches(body);

        // TODO: test validations
    }

    /**
     * Add Alert Tags
     *
     * Add tags to the alert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addTagsTest() throws ApiException {


        String identifier = null;

        AddAlertTagsRequest body = null;

        String identifierType = null;
        

        SuccessResponse response = api.addTags(identifier, body, identifierType);

        // TODO: test validations
    }

    /**
     * Add Team
     *
     * Add team to alert with given identifier
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addTeamTest() throws ApiException {


        String identifier = null;

        AddAlertTeamRequest body = null;

        String identifierType = null;
        

        SuccessResponse response = api.addTeam(identifier, body, identifierType);

        // TODO: test validations
    }

    /**
     * Assign Alert
     *
     * Assign alert with given identifier
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void assignAlertTest() throws ApiException {


        String identifier = null;

        AssignAlertRequest body = null;

        String identifierType = null;
        

        SuccessResponse response = api.assignAlert(identifier, body, identifierType);

        // TODO: test validations
    }

    /**
     * Close Alert
     *
     * Closes alert with given identifier
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void closeAlertTest() throws ApiException {


        String identifier = null;

        String identifierType = null;

        CloseAlertRequest body = null;
        

        SuccessResponse response = api.closeAlert(identifier, identifierType, body);

        // TODO: test validations
    }

    /**
     * Create Alert
     *
     * Creates a new alert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAlertTest() throws ApiException {


        CreateAlertRequest body = null;
        

        SuccessResponse response = api.createAlert(body);

        // TODO: test validations
    }

    /**
     * Delete Alert
     *
     * Deletes an alert using alert id, tiny id or alias
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAlertTest() throws ApiException {
        DeleteAlertRequest params = null;


        SuccessResponse response = api.deleteAlert(params);

        // TODO: test validations
    }

    /**
     * Delete Alert Attachment
     *
     * Delete alert attachment for the given identifier
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAttachmentTest() throws ApiException {
        DeleteAlertAttachmentRequest params = null;


        SuccessResponse response = api.deleteAttachment(params);

        // TODO: test validations
    }

    /**
     * Delete Alert Details
     *
     * Delete the details of an alert using alert id, tiny id or alias
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDetailsTest() throws ApiException {
        DeleteAlertDetailsRequest params = null;


        SuccessResponse response = api.deleteDetails(params);

        // TODO: test validations
    }

    /**
     * Delete Saved Search
     *
     * Deletes saved search using given search identifier
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSavedSearchTest() throws ApiException {


        String identifier = null;

        String identifierType = null;
        

        SuccessResponse response = api.deleteSavedSearch(identifier, identifierType);

        // TODO: test validations
    }

    /**
     * Delete Alert Tags
     *
     * Delete tags of the alert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTagsTest() throws ApiException {
        DeleteAlertTagsRequest params = null;


        SuccessResponse response = api.deleteTags(params);

        // TODO: test validations
    }

    /**
     * Escalate Alert
     *
     * Escalate alert with given identifier
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void escalateAlertTest() throws ApiException {


        String identifier = null;

        EscalateAlertToNextRequest body = null;

        String identifierType = null;
        

        SuccessResponse response = api.escalateAlert(identifier, body, identifierType);

        // TODO: test validations
    }

    /**
     * Custom Alert Action
     *
     * Custom actions for the alert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void executeCustomActionTest() throws ApiException {


        String identifier = null;

        String actionName = null;

        String identifierType = null;

        ExecuteCustomAlertActionRequest body = null;
        

        SuccessResponse response = api.executeCustomAction(identifier, actionName, identifierType, body);

        // TODO: test validations
    }

    /**
     * Get Alert
     *
     * Returns alert with given id, tiny id or alias
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAlertTest() throws ApiException {


        String identifier = null;

        String identifierType = null;
        

        GetAlertResponse response = api.getAlert(identifier, identifierType);

        // TODO: test validations
    }

    /**
     * Get Alert Attachment
     *
     * Get alert attachment name and url for the given identifier
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAttachmentTest() throws ApiException {


        String identifier = null;

        Long attachmentId = null;

        String alertIdentifierType = null;
        

        GetAlertAttachmentResponse response = api.getAttachment(identifier, attachmentId, alertIdentifierType);

        // TODO: test validations
    }

    /**
     * Get Request Status of Alert
     *
     * Returns status of alert request
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRequestStatusTest() throws ApiException {


        String requestId = null;
        

        GetRequestStatusResponse response = api.getRequestStatus(requestId);

        // TODO: test validations
    }

    /**
     * Get Saved Search
     *
     * Get saved search for the given search identifier
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSavedSearchTest() throws ApiException {


        String identifier = null;

        String identifierType = null;
        

        GetSavedSearchResponse response = api.getSavedSearch(identifier, identifierType);

        // TODO: test validations
    }

    /**
     * List Alerts
     *
     * Returns list of alerts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAlertsTest() throws ApiException {
        ListAlertsRequest params = null;


        ListAlertsResponse response = api.listAlerts(params);

        // TODO: test validations
    }

    /**
     * List Alert Attachment
     *
     * List alert attachment names and urls for related alert
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAttachmentsTest() throws ApiException {


        String identifier = null;

        String alertIdentifierType = null;
        

        ListAlertAttachmentResponse response = api.listAttachments(identifier, alertIdentifierType);

        // TODO: test validations
    }

    /**
     * List Alert Logs
     *
     * List alert logs for the given alert identifier
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listLogsTest() throws ApiException {
        ListAlertLogsRequest params = null;


        ListAlertLogsResponse response = api.listLogs(params);

        // TODO: test validations
    }

    /**
     * List Alert Notes
     *
     * List alert notes for the given alert identifier
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNotesTest() throws ApiException {
        ListAlertNotesRequest params = null;


        ListAlertNotesResponse response = api.listNotes(params);

        // TODO: test validations
    }

    /**
     * List Alert Recipients
     *
     * List alert recipients for the given alert identifier
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listRecipientsTest() throws ApiException {


        String identifier = null;

        String identifierType = null;
        

        ListAlertRecipientsResponse response = api.listRecipients(identifier, identifierType);

        // TODO: test validations
    }

    /**
     * Lists Saved Searches
     *
     * List all saved searches
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listSavedSearchesTest() throws ApiException {


        ListSavedSearchResponse response = api.listSavedSearches();

        // TODO: test validations
    }

    /**
     * Snooze Alert
     *
     * Snooze alert with given identifier
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void snoozeAlertTest() throws ApiException {


        String identifier = null;

        SnoozeAlertRequest body = null;

        String identifierType = null;
        

        SuccessResponse response = api.snoozeAlert(identifier, body, identifierType);

        // TODO: test validations
    }

    /**
     * UnAcknowledge Alert
     *
     * UnAcknowledge alert with given identifier
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void unAcknowledgeAlertTest() throws ApiException {


        String identifier = null;

        String identifierType = null;

        UnAcknowledgeAlertRequest body = null;
        

        SuccessResponse response = api.unAcknowledgeAlert(identifier, identifierType, body);

        // TODO: test validations
    }

}
